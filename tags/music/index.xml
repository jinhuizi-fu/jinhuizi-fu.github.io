<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>music on We Are All Stardust</title>
    <link>/tags/music/</link>
    <description>Recent content in music on We Are All Stardust</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jan 2021 14:30:00 -0500</lastBuildDate><atom:link href="/tags/music/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ernest Chausson&#39;s beautifu Poème and Turgenev&#39;s story</title>
      <link>/post/2021-01-28-chausson-turgenev/</link>
      <pubDate>Thu, 28 Jan 2021 14:30:00 -0500</pubDate>
      
      <guid>/post/2021-01-28-chausson-turgenev/</guid>
      <description>Chausson composed Poème, a one movement violin-orchestra piece 3 years before he died. So beautiful, mysterious, and sexy, this is one of my favouite music ever.
His inspiration came from Ivan Turgenev’s novel, The Song of Triumphant Love. I spent an hour to read this novel one night. It is an interesting story. It’s about 2 friends, one of them a painter and the other a musician, fell in love with same woman.</description>
    </item>
    
    <item>
      <title>[Under Construction] Spotify Analysis 3.2 - What Makes a Playlist Successful?</title>
      <link>/post/2020-10-23-spotify-analysis-3-2/</link>
      <pubDate>Mon, 23 Nov 2020 10:30:00 -0500</pubDate>
      
      <guid>/post/2020-10-23-spotify-analysis-3-2/</guid>
      <description>In the last post, we discussed about the goal of this project (find out what makes a playlist successful), and sourced data through Spotify API. In this post, we will continue working towards this goal by building 2 models. After that, we’re going to look at the variable importance, as well as compare the methods.
Split Training and Testing Datasets Create training (80%) and test (20%) sets for the spotify_pl_feature_1 data.</description>
    </item>
    
    <item>
      <title>Spotify Analysis 3.1 - What Makes a Playlist Successful?</title>
      <link>/post/2020-09-21-spotify-analysis-3-1/</link>
      <pubDate>Mon, 02 Nov 2020 10:30:00 -0500</pubDate>
      
      <guid>/post/2020-09-21-spotify-analysis-3-1/</guid>
      <description>I already wrote two posts on Spotify analysis - one on the Beatles tracks and albums, and another one for my own listening habits. I had a lot of fun doing these exploratory data analysis, and I decide to make it a trilogy. In this new post, I’m going to take one step further: I want to find out what makes a playlist successful, and try to predict how successful a playlist will be based on its known features.</description>
    </item>
    
    <item>
      <title>Spotify Analysis 2 - Music I listen To</title>
      <link>/post/2020-09-02-spotify-analysis-2/</link>
      <pubDate>Wed, 02 Sep 2020 10:30:00 -0500</pubDate>
      
      <guid>/post/2020-09-02-spotify-analysis-2/</guid>
      <description>In my last post, I downloaded the track features of the Beatles’ songs from Spotify web API, and did some basic mining on it. We looked at the keys the Beatles used most, happiest songs, most danceable songs, the distribution of happiness and liveness of each album. It was fun stuff!
In this new post, I’m going to explore a little more. Not the Beatles though, today I’m going to take a look at my own listening habits!</description>
    </item>
    
    <item>
      <title>Spotify Analysis 1 - the Beatles</title>
      <link>/post/2020-08-25-spotify-analysis-1/</link>
      <pubDate>Wed, 26 Aug 2020 10:30:00 -0500</pubDate>
      
      <guid>/post/2020-08-25-spotify-analysis-1/</guid>
      <description>I absolutely love music! Spotify is my go-to app when I want to enjoy some listening. As someone who’s passionate about mining data and discover the story underneath, what’s great is that for each song, Spotify stores a list of its features such as acousticness, danceability, energy and more. Also, thanks to the {spotifyr} package by Charlie Thompson, we can easily use a web API by Spotify from which I can download very interesting data and play with it.</description>
    </item>
    
  </channel>
</rss>
